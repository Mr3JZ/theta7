//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Persistence
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ISSEntities2 : DbContext
    {
        public ISSEntities2()
            : base("name=ISSEntities2")
        {
        }

        public ISSEntities2(string nameOrConnectionString) : base(nameOrConnectionString)
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Conference> Conferences { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int insertUser(string username, string name, string password, string email, string affiliation, string webPage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var affiliationParameter = affiliation != null ?
                new ObjectParameter("Affiliation", affiliation) :
                new ObjectParameter("Affiliation", typeof(string));
    
            var webPageParameter = webPage != null ?
                new ObjectParameter("WebPage", webPage) :
                new ObjectParameter("WebPage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertUser", usernameParameter, nameParameter, passwordParameter, emailParameter, affiliationParameter, webPageParameter);
        }
    }
}

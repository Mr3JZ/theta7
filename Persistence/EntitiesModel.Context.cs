//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Persistence
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ISSEntities2 : DbContext
    {
        public ISSEntities2()
            : base("name=ISSEntities2")
        {
        }

        public ISSEntities2(string nameOrConnectionString) : base(nameOrConnectionString)
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdditionalAuthor> AdditionalAuthors { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<AvailableRoom> AvailableRooms { get; set; }
        public virtual DbSet<Bid> Bids { get; set; }
        public virtual DbSet<ConferenceParticipant> ConferenceParticipants { get; set; }
        public virtual DbSet<Conference> Conferences { get; set; }
        public virtual DbSet<MessagesC> MessagesCs { get; set; }
        public virtual DbSet<PaperReservation> PaperReservations { get; set; }
        public virtual DbSet<Paper> Papers { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PCMember> PCMembers { get; set; }
        public virtual DbSet<Review> Reviews { get; set; }
        public virtual DbSet<RoomReservation> RoomReservations { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<getConference> getConferences { get; set; }
        public virtual DbSet<getMessagesAll> getMessagesAlls { get; set; }
        public virtual DbSet<getPossiblePCMember> getPossiblePCMembers { get; set; }
        public virtual DbSet<getUser> getUsers { get; set; }
    
        [DbFunction("ISSEntities2", "getAdditionalAuthors")]
        public virtual IQueryable<getAdditionalAuthors_Result> getAdditionalAuthors(Nullable<int> idPaper)
        {
            var idPaperParameter = idPaper.HasValue ?
                new ObjectParameter("idPaper", idPaper) :
                new ObjectParameter("idPaper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getAdditionalAuthors_Result>("[ISSEntities2].[getAdditionalAuthors](@idPaper)", idPaperParameter);
        }
    
        [DbFunction("ISSEntities2", "getBidsResult")]
        public virtual IQueryable<getBidsResult_Result> getBidsResult(Nullable<int> idPaper)
        {
            var idPaperParameter = idPaper.HasValue ?
                new ObjectParameter("idPaper", idPaper) :
                new ObjectParameter("idPaper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getBidsResult_Result>("[ISSEntities2].[getBidsResult](@idPaper)", idPaperParameter);
        }
    
        [DbFunction("ISSEntities2", "getMessagesUser")]
        public virtual IQueryable<getMessagesUser_Result> getMessagesUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getMessagesUser_Result>("[ISSEntities2].[getMessagesUser](@idUser)", idUserParameter);
        }
    
        [DbFunction("ISSEntities2", "getPapersConference")]
        public virtual IQueryable<getPapersConference_Result> getPapersConference(Nullable<int> idConference)
        {
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getPapersConference_Result>("[ISSEntities2].[getPapersConference](@idConference)", idConferenceParameter);
        }
    
        [DbFunction("ISSEntities2", "getPapersSession")]
        public virtual IQueryable<getPapersSession_Result> getPapersSession(Nullable<int> idSession)
        {
            var idSessionParameter = idSession.HasValue ?
                new ObjectParameter("idSession", idSession) :
                new ObjectParameter("idSession", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getPapersSession_Result>("[ISSEntities2].[getPapersSession](@idSession)", idSessionParameter);
        }
    
        [DbFunction("ISSEntities2", "getParticpantsConference")]
        public virtual IQueryable<getParticpantsConference_Result> getParticpantsConference(Nullable<int> idConference)
        {
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getParticpantsConference_Result>("[ISSEntities2].[getParticpantsConference](@idConference)", idConferenceParameter);
        }
    
        [DbFunction("ISSEntities2", "getPayment")]
        public virtual IQueryable<getPayment_Result> getPayment(Nullable<int> idUser, Nullable<int> idConference)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getPayment_Result>("[ISSEntities2].[getPayment](@idUser, @idConference)", idUserParameter, idConferenceParameter);
        }
    
        [DbFunction("ISSEntities2", "getPCMembersConference")]
        public virtual IQueryable<getPCMembersConference_Result> getPCMembersConference(Nullable<int> idConference)
        {
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getPCMembersConference_Result>("[ISSEntities2].[getPCMembersConference](@idConference)", idConferenceParameter);
        }
    
        [DbFunction("ISSEntities2", "getReservationPaper")]
        public virtual IQueryable<getReservationPaper_Result> getReservationPaper(Nullable<int> idPaper)
        {
            var idPaperParameter = idPaper.HasValue ?
                new ObjectParameter("idPaper", idPaper) :
                new ObjectParameter("idPaper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getReservationPaper_Result>("[ISSEntities2].[getReservationPaper](@idPaper)", idPaperParameter);
        }
    
        [DbFunction("ISSEntities2", "getReviewsPaper")]
        public virtual IQueryable<getReviewsPaper_Result> getReviewsPaper(Nullable<int> idPaper)
        {
            var idPaperParameter = idPaper.HasValue ?
                new ObjectParameter("idPaper", idPaper) :
                new ObjectParameter("idPaper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getReviewsPaper_Result>("[ISSEntities2].[getReviewsPaper](@idPaper)", idPaperParameter);
        }
    
        [DbFunction("ISSEntities2", "getReviewsPcMember")]
        public virtual IQueryable<getReviewsPcMember_Result> getReviewsPcMember(Nullable<int> idPcMember, Nullable<int> idConference)
        {
            var idPcMemberParameter = idPcMember.HasValue ?
                new ObjectParameter("idPcMember", idPcMember) :
                new ObjectParameter("idPcMember", typeof(int));
    
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getReviewsPcMember_Result>("[ISSEntities2].[getReviewsPcMember](@idPcMember, @idConference)", idPcMemberParameter, idConferenceParameter);
        }
    
        [DbFunction("ISSEntities2", "getSessionsForConference")]
        public virtual IQueryable<getSessionsForConference_Result> getSessionsForConference(Nullable<int> idConference)
        {
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSessionsForConference_Result>("[ISSEntities2].[getSessionsForConference](@idConference)", idConferenceParameter);
        }
    
        [DbFunction("ISSEntities2", "getTopicsFor1Conference")]
        public virtual IQueryable<getTopicsFor1Conference_Result> getTopicsFor1Conference(Nullable<int> idConference)
        {
            var idConferenceParameter = idConference.HasValue ?
                new ObjectParameter("idConference", idConference) :
                new ObjectParameter("idConference", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getTopicsFor1Conference_Result>("[ISSEntities2].[getTopicsFor1Conference](@idConference)", idConferenceParameter);
        }
    }
}
